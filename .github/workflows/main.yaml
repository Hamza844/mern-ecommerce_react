name: Deploy React MERN Application

on:
  push:
    branches:
      - main

jobs:
  build:
    name: üß± Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # üî• Critical Fix: Set up Docker and Docker Compose first
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # üî• Alternative: Install docker-compose if needed (uncomment if still having issues)
      # - name: Install docker-compose
      #   run: |
      #     sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
      #     sudo chmod +x /usr/local/bin/docker-compose

      - name: Build frontend
        uses: docker/compose-action@v1  # üî• Better maintained alternative
        with:
          compose-file: './docker-compose.yaml'
          command: run --rm frontend build

      - name: Build backend
        uses: docker/compose-action@v1
        with:
          compose-file: './docker-compose.yaml'
          command: run --rm backend build

  scan-files:
    name: üîç Scan Source Code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies for scan
        run: |
          npm install --prefix frontend
          npm install --prefix backend

      - name: Run ESLint on frontend
        run: npx --prefix frontend eslint . || true

      - name: Run ESLint on backend
        run: npx --prefix backend eslint . || true

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    needs: scan-files
    steps:
      - uses: actions/checkout@v3

      - name: Run frontend tests
        run: npm test --prefix frontend -- --watchAll=false || true

      - name: Run backend tests
        run: npm test --prefix backend || true

  scan-docker:
    name: üê≥ Docker Image Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build frontend image
        run: docker compose -f ./docker-compose.yaml build frontend

      - name: Build backend image
        run: docker compose -f ./docker-compose.yaml build backend

      - name: Scan frontend with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: frontend:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

      - name: Scan backend with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

  push-image:
    name: ‚òÅÔ∏è Push Docker Images
    runs-on: ubuntu-latest
    needs: scan-docker
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Tag & Push frontend
        run: |
          docker tag frontend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest

      - name: Tag & Push backend
        run: |
          docker tag backend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest

  deploy:
    name: üöÄ Deploy to EC2 Server
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: SSH into Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/mern-ecommerce
            git pull origin main
            docker compose down
            docker compose pull
            docker compose up -d --build
            cd /home/ubuntu/mern-ecommerce/backend
            npm run seed