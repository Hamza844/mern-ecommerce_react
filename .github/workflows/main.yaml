name: Deploy React MERN Application

on:
  push:
    branches:
      - main  # not origin/main, just main

jobs:
  build:
    name: üß± Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker images
        uses: adrielcodeco/docker-compose-run-action@v1
        with:
          compose-file: './docker-compose.yaml'
          command: build

  scan-files:
    name: üîç Scan Source Code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies for scan
        run: |
          npm install --prefix frontend
          npm install --prefix backend

      - name: Run ESLint on frontend
        run: npx --prefix frontend eslint . || true

      - name: Run ESLint on backend
        run: npx --prefix backend eslint . || true

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    needs: scan-files
    steps:
      - uses: actions/checkout@v3

      - name: Run frontend tests
        run: npm test --prefix frontend || true

      - name: Run backend tests
        run: npm test --prefix backend || true

  scan-docker:
    name: üê≥ Docker Image Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker images
        uses: adrielcodeco/docker-compose-run-action@v1
        with:
          compose-file: './docker-compose.yaml'
          command: build

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: frontend:latest
          format: table
          exit-code: 0

  push-image:
    name: ‚òÅÔ∏è Push Docker Images
    runs-on: ubuntu-latest
    needs: scan-docker
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Tag & Push frontend
        run: |
          docker tag frontend yourdockerhub/frontend:latest
          docker push yourdockerhub/frontend:latest

      - name: Tag & Push backend
        run: |
          docker tag backend yourdockerhub/backend:latest
          docker push yourdockerhub/backend:latest

  deploy:
    name: üöÄ Deploy to EC2 Server
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: SSH into Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/mern-ecommerce
            git pull origin main
            docker compose down
            docker compose pull
            docker compose up -d --build
            cd /home/ubuntu/mern-ecommerce/backend
            npm run seed
