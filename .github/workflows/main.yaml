name: ðŸš€ One-Step Deploy & Push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy & Push Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script_timeout: 15m
          script: |
            set -e

            echo "--- Changing to project directory ---"
            cd /home/ubuntu/mern-ecommerce || { echo "Directory not found!"; exit 1; }

            echo "--- Fixing repository permissions ---"
            sudo chown -R $USER:$USER .
            sudo chmod -R 755 .
            find .git -type d -exec chmod 755 {} \;
            find .git -type f -exec chmod 644 {} \;

            echo "--- Marking repo as safe for Git ---"
            git config --global --add safe.directory /home/ubuntu/mern-ecommerce

            echo "--- Pulling latest code ---"
            git pull origin main

            echo "--- Docker cleanup ---"
            docker compose down --remove-orphans

            echo "--- Building and starting containers ---"
            docker compose up -d --build --remove-orphans

            echo "--- Logging into Docker Hub ---"
            echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin || {
              echo "Docker login failed"; exit 1;
            }

            echo "--- Tagging and pushing images ---"
            docker tag frontend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
            docker tag backend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest

            echo "--- Seeding database ---"
            sleep 15  # Increased wait time
            backend_container=$(docker ps -qf "name=backend" || true)
            if [ -z "$backend_container" ]; then
              echo "Backend container not found!"
              echo "Current containers:"
              docker ps -a
              echo "Logs from backend:"
              docker logs $(docker ps -aqf "name=backend") || true
              exit 1
            fi
            docker exec $backend_container npm run seed

            echo "--- Deployment complete ---"